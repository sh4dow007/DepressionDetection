#############################################################################
# Generated by PAGE version 4.23a
#  in conjunction with Tcl version 8.6
#  Jun 14, 2019 09:46:43 PM IST  platform: Linux
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_text_desc) $desc
set vTcl(actual_gui_font_text_name) [font create {*}$desc]
set desc "-family {DejaVu Sans Mono} -size 10"
set vTcl(actual_gui_font_fixed_desc) $desc
set vTcl(actual_gui_font_fixed_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_menu_desc) $desc
set vTcl(actual_gui_font_menu_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 10"
set vTcl(actual_gui_font_tooltip_desc) $desc
set vTcl(actual_gui_font_tooltip_name) [font create {*}$desc]
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #ececec
set vTcl(actual_gui_menu_analog) #ececec
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #ececec
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(active_menu_fg) #000000
}

# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family {DejaVu Sans} -size 10 -weight normal -slant italic -underline 0 -overstrike 0" \
    user \
    vTcl:font15
vTcl:font:add_font \
    "-family {DejaVu Sans} -size 10 -weight bold -slant italic -underline 0 -overstrike 0" \
    user \
    vTcl:font16
vTcl:font:add_font \
    "-family {DejaVu Sans} -size 14 -weight bold -slant roman -underline 1 -overstrike 0" \
    user \
    vTcl:font17
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top42
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top42
    }
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top42 {base} {
    if {$base == ""} {
        set base .top42
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu {} -background {#d9d9d9} -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 1366x666+0+27
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1351 738
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 0 0
    wm deiconify $top
    wm title $top "DocDep"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    label $top.lab43 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font $::vTcl(fonts,vTcl:font17,object) \
        -foreground {#000000} -highlightcolor black \
        -text {Are You Depressed??} 
    vTcl:DefineAlias "$top.lab43" "Label1" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab44 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font $::vTcl(fonts,vTcl:font15,object) \
        -foreground {#000000} -highlightcolor black \
        -text {Its OK To ASK for HELP!!} 
    vTcl:DefineAlias "$top.lab44" "Label2" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab45 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font $::vTcl(fonts,vTcl:font16,object) \
        -foreground {#000000} -highlightcolor black \
        -text {Lets Start the test!!} 
    vTcl:DefineAlias "$top.lab45" "Label3" vTcl:WidgetProc "Toplevel1" 1
    button $top.but46 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font font9 -foreground {#000000} \
        -highlightcolor black -text START 
    vTcl:DefineAlias "$top.but46" "Button1" vTcl:WidgetProc "Toplevel1" 1
    bind $top.but46 <Button-1> {
        lambda e: DocDep_support.StartButton(e)
    }
    label $top.lab47 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -highlightcolor black -text {*press START when you are ready} 
    vTcl:DefineAlias "$top.lab47" "Label4" vTcl:WidgetProc "Toplevel1" 1
    text $top.tex48 \
        -background white -font TkTextFont -foreground black -height 74 \
        -highlightcolor black -insertbackground black \
        -selectbackground {#c4c4c4} -selectforeground black -width 366 \
        -wrap word 
    .top42.tex48 configure -font "TkTextFont"
    .top42.tex48 insert end text
    vTcl:DefineAlias "$top.tex48" "Text1" vTcl:WidgetProc "Toplevel1" 1
    text $top.tex47 \
        -background white -font {-family {DejaVu Sans} -size 10} \
        -foreground black -height 214 -highlightcolor black \
        -insertbackground black -selectbackground {#c4c4c4} \
        -selectforeground black -width 516 -wrap word 
    .top42.tex47 configure -font "-family {DejaVu Sans} -size 10"
    .top42.tex47 insert end text
    vTcl:DefineAlias "$top.tex47" "Text2" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab48 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -highlightcolor black -text Instructions: 
    vTcl:DefineAlias "$top.lab48" "Label5" vTcl:WidgetProc "Toplevel1" 1
    label $top.lab49 \
        -activebackground {#f9f9f9} -activeforeground black \
        -background {#d9d9d9} -font TkDefaultFont -foreground {#000000} \
        -highlightcolor black -text Result: 
    vTcl:DefineAlias "$top.lab49" "Label6" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.lab43 \
        -in $top -x 560 -y 30 -anchor nw -bordermode ignore 
    place $top.lab44 \
        -in $top -x 590 -y 60 -anchor nw -bordermode ignore 
    place $top.lab45 \
        -in $top -x 600 -y 110 -anchor nw -bordermode ignore 
    place $top.but46 \
        -in $top -x 640 -y 150 -anchor nw -bordermode ignore 
    place $top.lab47 \
        -in $top -x 570 -y 200 -anchor nw -bordermode ignore 
    place $top.tex48 \
        -in $top -x 490 -y 260 -width 366 -relwidth 0 -height 74 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.tex47 \
        -in $top -x 420 -y 390 -width 516 -relwidth 0 -height 214 \
        -relheight 0 -anchor nw -bordermode ignore 
    place $top.lab48 \
        -in $top -x 490 -y 240 -anchor nw -bordermode ignore 
    place $top.lab49 \
        -in $top -x 420 -y 370 -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top42 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

